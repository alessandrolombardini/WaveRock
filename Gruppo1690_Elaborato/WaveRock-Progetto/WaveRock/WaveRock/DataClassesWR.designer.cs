#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WaveRock
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WaveRockDatabase")]
	public partial class DataClassesWRDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertABBONAMENTO(ABBONAMENTO instance);
    partial void UpdateABBONAMENTO(ABBONAMENTO instance);
    partial void DeleteABBONAMENTO(ABBONAMENTO instance);
    partial void InsertACCESSO(ACCESSO instance);
    partial void UpdateACCESSO(ACCESSO instance);
    partial void DeleteACCESSO(ACCESSO instance);
    partial void InsertACQUISTO(ACQUISTO instance);
    partial void UpdateACQUISTO(ACQUISTO instance);
    partial void DeleteACQUISTO(ACQUISTO instance);
    partial void InsertBIGLIETTO(BIGLIETTO instance);
    partial void UpdateBIGLIETTO(BIGLIETTO instance);
    partial void DeleteBIGLIETTO(BIGLIETTO instance);
    partial void InsertCORSO(CORSO instance);
    partial void UpdateCORSO(CORSO instance);
    partial void DeleteCORSO(CORSO instance);
    partial void InsertEDIZIONE_CORSO(EDIZIONE_CORSO instance);
    partial void UpdateEDIZIONE_CORSO(EDIZIONE_CORSO instance);
    partial void DeleteEDIZIONE_CORSO(EDIZIONE_CORSO instance);
    partial void InsertFASCIA_ETA(FASCIA_ETA instance);
    partial void UpdateFASCIA_ETA(FASCIA_ETA instance);
    partial void DeleteFASCIA_ETA(FASCIA_ETA instance);
    partial void InsertFASCIA_ORARIA(FASCIA_ORARIA instance);
    partial void UpdateFASCIA_ORARIA(FASCIA_ORARIA instance);
    partial void DeleteFASCIA_ORARIA(FASCIA_ORARIA instance);
    partial void InsertISCRIZIONE(ISCRIZIONE instance);
    partial void UpdateISCRIZIONE(ISCRIZIONE instance);
    partial void DeleteISCRIZIONE(ISCRIZIONE instance);
    partial void InsertLEZIONE(LEZIONE instance);
    partial void UpdateLEZIONE(LEZIONE instance);
    partial void DeleteLEZIONE(LEZIONE instance);
    partial void InsertLUOGO(LUOGO instance);
    partial void UpdateLUOGO(LUOGO instance);
    partial void DeleteLUOGO(LUOGO instance);
    partial void InsertORARIO(ORARIO instance);
    partial void UpdateORARIO(ORARIO instance);
    partial void DeleteORARIO(ORARIO instance);
    partial void InsertPERSONA(PERSONA instance);
    partial void UpdatePERSONA(PERSONA instance);
    partial void DeletePERSONA(PERSONA instance);
    partial void InsertTESSERA(TESSERA instance);
    partial void UpdateTESSERA(TESSERA instance);
    partial void DeleteTESSERA(TESSERA instance);
    partial void InsertTIPO_ABBONAMENTO(TIPO_ABBONAMENTO instance);
    partial void UpdateTIPO_ABBONAMENTO(TIPO_ABBONAMENTO instance);
    partial void DeleteTIPO_ABBONAMENTO(TIPO_ABBONAMENTO instance);
    partial void InsertTIPO_BIGLIETTO(TIPO_BIGLIETTO instance);
    partial void UpdateTIPO_BIGLIETTO(TIPO_BIGLIETTO instance);
    partial void DeleteTIPO_BIGLIETTO(TIPO_BIGLIETTO instance);
    partial void InsertTIPO_TESSERA(TIPO_TESSERA instance);
    partial void UpdateTIPO_TESSERA(TIPO_TESSERA instance);
    partial void DeleteTIPO_TESSERA(TIPO_TESSERA instance);
    partial void InsertUSO_TESSERA(USO_TESSERA instance);
    partial void UpdateUSO_TESSERA(USO_TESSERA instance);
    partial void DeleteUSO_TESSERA(USO_TESSERA instance);
    #endregion
		
		public DataClassesWRDataContext() : 
				base(global::WaveRock.Properties.Settings.Default.WaveRockDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWRDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWRDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWRDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesWRDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ABBONAMENTO> ABBONAMENTO
		{
			get
			{
				return this.GetTable<ABBONAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<ACCESSO> ACCESSO
		{
			get
			{
				return this.GetTable<ACCESSO>();
			}
		}
		
		public System.Data.Linq.Table<ACQUISTO> ACQUISTO
		{
			get
			{
				return this.GetTable<ACQUISTO>();
			}
		}
		
		public System.Data.Linq.Table<BIGLIETTO> BIGLIETTO
		{
			get
			{
				return this.GetTable<BIGLIETTO>();
			}
		}
		
		public System.Data.Linq.Table<CORSO> CORSO
		{
			get
			{
				return this.GetTable<CORSO>();
			}
		}
		
		public System.Data.Linq.Table<EDIZIONE_CORSO> EDIZIONE_CORSO
		{
			get
			{
				return this.GetTable<EDIZIONE_CORSO>();
			}
		}
		
		public System.Data.Linq.Table<FASCIA_ETA> FASCIA_ETA
		{
			get
			{
				return this.GetTable<FASCIA_ETA>();
			}
		}
		
		public System.Data.Linq.Table<FASCIA_ORARIA> FASCIA_ORARIA
		{
			get
			{
				return this.GetTable<FASCIA_ORARIA>();
			}
		}
		
		public System.Data.Linq.Table<ISCRIZIONE> ISCRIZIONE
		{
			get
			{
				return this.GetTable<ISCRIZIONE>();
			}
		}
		
		public System.Data.Linq.Table<LEZIONE> LEZIONE
		{
			get
			{
				return this.GetTable<LEZIONE>();
			}
		}
		
		public System.Data.Linq.Table<LUOGO> LUOGO
		{
			get
			{
				return this.GetTable<LUOGO>();
			}
		}
		
		public System.Data.Linq.Table<ORARIO> ORARIO
		{
			get
			{
				return this.GetTable<ORARIO>();
			}
		}
		
		public System.Data.Linq.Table<PERSONA> PERSONA
		{
			get
			{
				return this.GetTable<PERSONA>();
			}
		}
		
		public System.Data.Linq.Table<TESSERA> TESSERA
		{
			get
			{
				return this.GetTable<TESSERA>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_ABBONAMENTO> TIPO_ABBONAMENTO
		{
			get
			{
				return this.GetTable<TIPO_ABBONAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_BIGLIETTO> TIPO_BIGLIETTO
		{
			get
			{
				return this.GetTable<TIPO_BIGLIETTO>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_TESSERA> TIPO_TESSERA
		{
			get
			{
				return this.GetTable<TIPO_TESSERA>();
			}
		}
		
		public System.Data.Linq.Table<USO_TESSERA> USO_TESSERA
		{
			get
			{
				return this.GetTable<USO_TESSERA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ABBONAMENTO")]
	public partial class ABBONAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTipoAbbonamento;
		
		private int _IDPersona;
		
		private System.DateTime _DataOraPagamento;
		
		private System.DateTime _DataInizio;
		
		private EntityRef<PERSONA> _PERSONA;
		
		private EntityRef<TIPO_ABBONAMENTO> _TIPO_ABBONAMENTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTipoAbbonamentoChanging(int value);
    partial void OnIDTipoAbbonamentoChanged();
    partial void OnIDPersonaChanging(int value);
    partial void OnIDPersonaChanged();
    partial void OnDataOraPagamentoChanging(System.DateTime value);
    partial void OnDataOraPagamentoChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    #endregion
		
		public ABBONAMENTO()
		{
			this._PERSONA = default(EntityRef<PERSONA>);
			this._TIPO_ABBONAMENTO = default(EntityRef<TIPO_ABBONAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoAbbonamento", DbType="Int NOT NULL")]
		public int IDTipoAbbonamento
		{
			get
			{
				return this._IDTipoAbbonamento;
			}
			set
			{
				if ((this._IDTipoAbbonamento != value))
				{
					if (this._TIPO_ABBONAMENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTipoAbbonamentoChanging(value);
					this.SendPropertyChanging();
					this._IDTipoAbbonamento = value;
					this.SendPropertyChanged("IDTipoAbbonamento");
					this.OnIDTipoAbbonamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPersona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraPagamento", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraPagamento
		{
			get
			{
				return this._DataOraPagamento;
			}
			set
			{
				if ((this._DataOraPagamento != value))
				{
					this.OnDataOraPagamentoChanging(value);
					this.SendPropertyChanging();
					this._DataOraPagamento = value;
					this.SendPropertyChanged("DataOraPagamento");
					this.OnDataOraPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ABBONAMENTO", Storage="_PERSONA", ThisKey="IDPersona", OtherKey="IDPersona", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ABBONAMENTO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ABBONAMENTO.Add(this);
						this._IDPersona = value.IDPersona;
					}
					else
					{
						this._IDPersona = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_ABBONAMENTO_ABBONAMENTO", Storage="_TIPO_ABBONAMENTO", ThisKey="IDTipoAbbonamento", OtherKey="IDTipoAbbonamento", IsForeignKey=true)]
		public TIPO_ABBONAMENTO TIPO_ABBONAMENTO
		{
			get
			{
				return this._TIPO_ABBONAMENTO.Entity;
			}
			set
			{
				TIPO_ABBONAMENTO previousValue = this._TIPO_ABBONAMENTO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_ABBONAMENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_ABBONAMENTO.Entity = null;
						previousValue.ABBONAMENTO.Remove(this);
					}
					this._TIPO_ABBONAMENTO.Entity = value;
					if ((value != null))
					{
						value.ABBONAMENTO.Add(this);
						this._IDTipoAbbonamento = value.IDTipoAbbonamento;
					}
					else
					{
						this._IDTipoAbbonamento = default(int);
					}
					this.SendPropertyChanged("TIPO_ABBONAMENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCESSO")]
	public partial class ACCESSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPersona;
		
		private System.DateTime _DataOra;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPersonaChanging(int value);
    partial void OnIDPersonaChanged();
    partial void OnDataOraChanging(System.DateTime value);
    partial void OnDataOraChanged();
    #endregion
		
		public ACCESSO()
		{
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPersona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOra", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataOra
		{
			get
			{
				return this._DataOra;
			}
			set
			{
				if ((this._DataOra != value))
				{
					this.OnDataOraChanging(value);
					this.SendPropertyChanging();
					this._DataOra = value;
					this.SendPropertyChanged("DataOra");
					this.OnDataOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ACCESSO", Storage="_PERSONA", ThisKey="IDPersona", OtherKey="IDPersona", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ACCESSO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ACCESSO.Add(this);
						this._IDPersona = value.IDPersona;
					}
					else
					{
						this._IDPersona = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACQUISTO")]
	public partial class ACQUISTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAcquisto;
		
		private System.DateTime _DataOraAcquisto;
		
		private int _IDPersona;
		
		private EntitySet<BIGLIETTO> _BIGLIETTO;
		
		private EntitySet<TESSERA> _TESSERA;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAcquistoChanging(int value);
    partial void OnIDAcquistoChanged();
    partial void OnDataOraAcquistoChanging(System.DateTime value);
    partial void OnDataOraAcquistoChanged();
    partial void OnIDPersonaChanging(int value);
    partial void OnIDPersonaChanged();
    #endregion
		
		public ACQUISTO()
		{
			this._BIGLIETTO = new EntitySet<BIGLIETTO>(new Action<BIGLIETTO>(this.attach_BIGLIETTO), new Action<BIGLIETTO>(this.detach_BIGLIETTO));
			this._TESSERA = new EntitySet<TESSERA>(new Action<TESSERA>(this.attach_TESSERA), new Action<TESSERA>(this.detach_TESSERA));
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAcquisto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAcquisto
		{
			get
			{
				return this._IDAcquisto;
			}
			set
			{
				if ((this._IDAcquisto != value))
				{
					this.OnIDAcquistoChanging(value);
					this.SendPropertyChanging();
					this._IDAcquisto = value;
					this.SendPropertyChanged("IDAcquisto");
					this.OnIDAcquistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraAcquisto", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraAcquisto
		{
			get
			{
				return this._DataOraAcquisto;
			}
			set
			{
				if ((this._DataOraAcquisto != value))
				{
					this.OnDataOraAcquistoChanging(value);
					this.SendPropertyChanging();
					this._DataOraAcquisto = value;
					this.SendPropertyChanged("DataOraAcquisto");
					this.OnDataOraAcquistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPersona", DbType="Int NOT NULL")]
		public int IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACQUISTO_BIGLIETTO", Storage="_BIGLIETTO", ThisKey="IDAcquisto", OtherKey="IDAcquisto")]
		public EntitySet<BIGLIETTO> BIGLIETTO
		{
			get
			{
				return this._BIGLIETTO;
			}
			set
			{
				this._BIGLIETTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACQUISTO_TESSERA", Storage="_TESSERA", ThisKey="IDAcquisto", OtherKey="IDAcquisto")]
		public EntitySet<TESSERA> TESSERA
		{
			get
			{
				return this._TESSERA;
			}
			set
			{
				this._TESSERA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ACQUISTO", Storage="_PERSONA", ThisKey="IDPersona", OtherKey="IDPersona", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ACQUISTO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ACQUISTO.Add(this);
						this._IDPersona = value.IDPersona;
					}
					else
					{
						this._IDPersona = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIGLIETTO(BIGLIETTO entity)
		{
			this.SendPropertyChanging();
			entity.ACQUISTO = this;
		}
		
		private void detach_BIGLIETTO(BIGLIETTO entity)
		{
			this.SendPropertyChanging();
			entity.ACQUISTO = null;
		}
		
		private void attach_TESSERA(TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.ACQUISTO = this;
		}
		
		private void detach_TESSERA(TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.ACQUISTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BIGLIETTO")]
	public partial class BIGLIETTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBiglietto;
		
		private System.Nullable<System.DateTime> _DataUso;
		
		private int _IDAcquisto;
		
		private int _IDTipoBiglietto;
		
		private EntityRef<ACQUISTO> _ACQUISTO;
		
		private EntityRef<TIPO_BIGLIETTO> _TIPO_BIGLIETTO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBigliettoChanging(int value);
    partial void OnIDBigliettoChanged();
    partial void OnDataUsoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataUsoChanged();
    partial void OnIDAcquistoChanging(int value);
    partial void OnIDAcquistoChanged();
    partial void OnIDTipoBigliettoChanging(int value);
    partial void OnIDTipoBigliettoChanged();
    #endregion
		
		public BIGLIETTO()
		{
			this._ACQUISTO = default(EntityRef<ACQUISTO>);
			this._TIPO_BIGLIETTO = default(EntityRef<TIPO_BIGLIETTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBiglietto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBiglietto
		{
			get
			{
				return this._IDBiglietto;
			}
			set
			{
				if ((this._IDBiglietto != value))
				{
					this.OnIDBigliettoChanging(value);
					this.SendPropertyChanging();
					this._IDBiglietto = value;
					this.SendPropertyChanged("IDBiglietto");
					this.OnIDBigliettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataUso", DbType="Date")]
		public System.Nullable<System.DateTime> DataUso
		{
			get
			{
				return this._DataUso;
			}
			set
			{
				if ((this._DataUso != value))
				{
					this.OnDataUsoChanging(value);
					this.SendPropertyChanging();
					this._DataUso = value;
					this.SendPropertyChanged("DataUso");
					this.OnDataUsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAcquisto", DbType="Int NOT NULL")]
		public int IDAcquisto
		{
			get
			{
				return this._IDAcquisto;
			}
			set
			{
				if ((this._IDAcquisto != value))
				{
					if (this._ACQUISTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAcquistoChanging(value);
					this.SendPropertyChanging();
					this._IDAcquisto = value;
					this.SendPropertyChanged("IDAcquisto");
					this.OnIDAcquistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoBiglietto", DbType="Int NOT NULL")]
		public int IDTipoBiglietto
		{
			get
			{
				return this._IDTipoBiglietto;
			}
			set
			{
				if ((this._IDTipoBiglietto != value))
				{
					if (this._TIPO_BIGLIETTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTipoBigliettoChanging(value);
					this.SendPropertyChanging();
					this._IDTipoBiglietto = value;
					this.SendPropertyChanged("IDTipoBiglietto");
					this.OnIDTipoBigliettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACQUISTO_BIGLIETTO", Storage="_ACQUISTO", ThisKey="IDAcquisto", OtherKey="IDAcquisto", IsForeignKey=true)]
		public ACQUISTO ACQUISTO
		{
			get
			{
				return this._ACQUISTO.Entity;
			}
			set
			{
				ACQUISTO previousValue = this._ACQUISTO.Entity;
				if (((previousValue != value) 
							|| (this._ACQUISTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACQUISTO.Entity = null;
						previousValue.BIGLIETTO.Remove(this);
					}
					this._ACQUISTO.Entity = value;
					if ((value != null))
					{
						value.BIGLIETTO.Add(this);
						this._IDAcquisto = value.IDAcquisto;
					}
					else
					{
						this._IDAcquisto = default(int);
					}
					this.SendPropertyChanged("ACQUISTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_BIGLIETTO_BIGLIETTO", Storage="_TIPO_BIGLIETTO", ThisKey="IDTipoBiglietto", OtherKey="IDTipoBiglietto", IsForeignKey=true)]
		public TIPO_BIGLIETTO TIPO_BIGLIETTO
		{
			get
			{
				return this._TIPO_BIGLIETTO.Entity;
			}
			set
			{
				TIPO_BIGLIETTO previousValue = this._TIPO_BIGLIETTO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_BIGLIETTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_BIGLIETTO.Entity = null;
						previousValue.BIGLIETTO.Remove(this);
					}
					this._TIPO_BIGLIETTO.Entity = value;
					if ((value != null))
					{
						value.BIGLIETTO.Add(this);
						this._IDTipoBiglietto = value.IDTipoBiglietto;
					}
					else
					{
						this._IDTipoBiglietto = default(int);
					}
					this.SendPropertyChanged("TIPO_BIGLIETTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CORSO")]
	public partial class CORSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private float _Prezzo;
		
		private string _Nome;
		
		private int _IDCorso;
		
		private string _Descrizione;
		
		private EntitySet<EDIZIONE_CORSO> _EDIZIONE_CORSO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrezzoChanging(float value);
    partial void OnPrezzoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIDCorsoChanging(int value);
    partial void OnIDCorsoChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public CORSO()
		{
			this._EDIZIONE_CORSO = new EntitySet<EDIZIONE_CORSO>(new Action<EDIZIONE_CORSO>(this.attach_EDIZIONE_CORSO), new Action<EDIZIONE_CORSO>(this.detach_EDIZIONE_CORSO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Real NOT NULL")]
		public float Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(2014) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCorso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCorso
		{
			get
			{
				return this._IDCorso;
			}
			set
			{
				if ((this._IDCorso != value))
				{
					this.OnIDCorsoChanging(value);
					this.SendPropertyChanging();
					this._IDCorso = value;
					this.SendPropertyChanged("IDCorso");
					this.OnIDCorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CORSO_EDIZIONE_CORSO", Storage="_EDIZIONE_CORSO", ThisKey="IDCorso", OtherKey="IDCorso")]
		public EntitySet<EDIZIONE_CORSO> EDIZIONE_CORSO
		{
			get
			{
				return this._EDIZIONE_CORSO;
			}
			set
			{
				this._EDIZIONE_CORSO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EDIZIONE_CORSO(EDIZIONE_CORSO entity)
		{
			this.SendPropertyChanging();
			entity.CORSO = this;
		}
		
		private void detach_EDIZIONE_CORSO(EDIZIONE_CORSO entity)
		{
			this.SendPropertyChanging();
			entity.CORSO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EDIZIONE_CORSO")]
	public partial class EDIZIONE_CORSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEdizioneCorso;
		
		private System.DateTime _DataInizio;
		
		private int _IDCorso;
		
		private int _NumeroIscritti;
		
		private int _NumeroPartecipanti;
		
		private int _IDPersona;
		
		private EntitySet<ISCRIZIONE> _ISCRIZIONE;
		
		private EntitySet<LEZIONE> _LEZIONE;
		
		private EntityRef<CORSO> _CORSO;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEdizioneCorsoChanging(int value);
    partial void OnIDEdizioneCorsoChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnIDCorsoChanging(int value);
    partial void OnIDCorsoChanged();
    partial void OnNumeroIscrittiChanging(int value);
    partial void OnNumeroIscrittiChanged();
    partial void OnNumeroPartecipantiChanging(int value);
    partial void OnNumeroPartecipantiChanged();
    partial void OnIDPersonaChanging(int value);
    partial void OnIDPersonaChanged();
    #endregion
		
		public EDIZIONE_CORSO()
		{
			this._ISCRIZIONE = new EntitySet<ISCRIZIONE>(new Action<ISCRIZIONE>(this.attach_ISCRIZIONE), new Action<ISCRIZIONE>(this.detach_ISCRIZIONE));
			this._LEZIONE = new EntitySet<LEZIONE>(new Action<LEZIONE>(this.attach_LEZIONE), new Action<LEZIONE>(this.detach_LEZIONE));
			this._CORSO = default(EntityRef<CORSO>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEdizioneCorso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDEdizioneCorso
		{
			get
			{
				return this._IDEdizioneCorso;
			}
			set
			{
				if ((this._IDEdizioneCorso != value))
				{
					this.OnIDEdizioneCorsoChanging(value);
					this.SendPropertyChanging();
					this._IDEdizioneCorso = value;
					this.SendPropertyChanged("IDEdizioneCorso");
					this.OnIDEdizioneCorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="Date NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCorso", DbType="Int NOT NULL")]
		public int IDCorso
		{
			get
			{
				return this._IDCorso;
			}
			set
			{
				if ((this._IDCorso != value))
				{
					if (this._CORSO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCorsoChanging(value);
					this.SendPropertyChanging();
					this._IDCorso = value;
					this.SendPropertyChanged("IDCorso");
					this.OnIDCorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroIscritti", DbType="Int NOT NULL")]
		public int NumeroIscritti
		{
			get
			{
				return this._NumeroIscritti;
			}
			set
			{
				if ((this._NumeroIscritti != value))
				{
					this.OnNumeroIscrittiChanging(value);
					this.SendPropertyChanging();
					this._NumeroIscritti = value;
					this.SendPropertyChanged("NumeroIscritti");
					this.OnNumeroIscrittiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPartecipanti", DbType="Int NOT NULL")]
		public int NumeroPartecipanti
		{
			get
			{
				return this._NumeroPartecipanti;
			}
			set
			{
				if ((this._NumeroPartecipanti != value))
				{
					this.OnNumeroPartecipantiChanging(value);
					this.SendPropertyChanging();
					this._NumeroPartecipanti = value;
					this.SendPropertyChanged("NumeroPartecipanti");
					this.OnNumeroPartecipantiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPersona", DbType="Int NOT NULL")]
		public int IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDIZIONE_CORSO_ISCRIZIONE", Storage="_ISCRIZIONE", ThisKey="IDEdizioneCorso", OtherKey="IDEdizioneCorso")]
		public EntitySet<ISCRIZIONE> ISCRIZIONE
		{
			get
			{
				return this._ISCRIZIONE;
			}
			set
			{
				this._ISCRIZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDIZIONE_CORSO_LEZIONE", Storage="_LEZIONE", ThisKey="IDEdizioneCorso", OtherKey="IDEdizioneCorso")]
		public EntitySet<LEZIONE> LEZIONE
		{
			get
			{
				return this._LEZIONE;
			}
			set
			{
				this._LEZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CORSO_EDIZIONE_CORSO", Storage="_CORSO", ThisKey="IDCorso", OtherKey="IDCorso", IsForeignKey=true)]
		public CORSO CORSO
		{
			get
			{
				return this._CORSO.Entity;
			}
			set
			{
				CORSO previousValue = this._CORSO.Entity;
				if (((previousValue != value) 
							|| (this._CORSO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CORSO.Entity = null;
						previousValue.EDIZIONE_CORSO.Remove(this);
					}
					this._CORSO.Entity = value;
					if ((value != null))
					{
						value.EDIZIONE_CORSO.Add(this);
						this._IDCorso = value.IDCorso;
					}
					else
					{
						this._IDCorso = default(int);
					}
					this.SendPropertyChanged("CORSO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_EDIZIONE_CORSO", Storage="_PERSONA", ThisKey="IDPersona", OtherKey="IDPersona", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.EDIZIONE_CORSO.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.EDIZIONE_CORSO.Add(this);
						this._IDPersona = value.IDPersona;
					}
					else
					{
						this._IDPersona = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ISCRIZIONE(ISCRIZIONE entity)
		{
			this.SendPropertyChanging();
			entity.EDIZIONE_CORSO = this;
		}
		
		private void detach_ISCRIZIONE(ISCRIZIONE entity)
		{
			this.SendPropertyChanging();
			entity.EDIZIONE_CORSO = null;
		}
		
		private void attach_LEZIONE(LEZIONE entity)
		{
			this.SendPropertyChanging();
			entity.EDIZIONE_CORSO = this;
		}
		
		private void detach_LEZIONE(LEZIONE entity)
		{
			this.SendPropertyChanging();
			entity.EDIZIONE_CORSO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FASCIA_ETA")]
	public partial class FASCIA_ETA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFasciaEta;
		
		private string _Nome;
		
		private decimal _InizioEta;
		
		private decimal _FineEta;
		
		private EntitySet<ORARIO> _ORARIO;
		
		private EntitySet<TIPO_ABBONAMENTO> _TIPO_ABBONAMENTO;
		
		private EntityRef<TIPO_BIGLIETTO> _TIPO_BIGLIETTO;
		
		private EntitySet<TIPO_TESSERA> _TIPO_TESSERA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFasciaEtaChanging(int value);
    partial void OnIDFasciaEtaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnInizioEtaChanging(decimal value);
    partial void OnInizioEtaChanged();
    partial void OnFineEtaChanging(decimal value);
    partial void OnFineEtaChanged();
    #endregion
		
		public FASCIA_ETA()
		{
			this._ORARIO = new EntitySet<ORARIO>(new Action<ORARIO>(this.attach_ORARIO), new Action<ORARIO>(this.detach_ORARIO));
			this._TIPO_ABBONAMENTO = new EntitySet<TIPO_ABBONAMENTO>(new Action<TIPO_ABBONAMENTO>(this.attach_TIPO_ABBONAMENTO), new Action<TIPO_ABBONAMENTO>(this.detach_TIPO_ABBONAMENTO));
			this._TIPO_BIGLIETTO = default(EntityRef<TIPO_BIGLIETTO>);
			this._TIPO_TESSERA = new EntitySet<TIPO_TESSERA>(new Action<TIPO_TESSERA>(this.attach_TIPO_TESSERA), new Action<TIPO_TESSERA>(this.detach_TIPO_TESSERA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFasciaEta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDFasciaEta
		{
			get
			{
				return this._IDFasciaEta;
			}
			set
			{
				if ((this._IDFasciaEta != value))
				{
					this.OnIDFasciaEtaChanging(value);
					this.SendPropertyChanging();
					this._IDFasciaEta = value;
					this.SendPropertyChanged("IDFasciaEta");
					this.OnIDFasciaEtaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InizioEta", DbType="Decimal(3,0) NOT NULL")]
		public decimal InizioEta
		{
			get
			{
				return this._InizioEta;
			}
			set
			{
				if ((this._InizioEta != value))
				{
					this.OnInizioEtaChanging(value);
					this.SendPropertyChanging();
					this._InizioEta = value;
					this.SendPropertyChanged("InizioEta");
					this.OnInizioEtaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineEta", DbType="Decimal(3,0) NOT NULL")]
		public decimal FineEta
		{
			get
			{
				return this._FineEta;
			}
			set
			{
				if ((this._FineEta != value))
				{
					this.OnFineEtaChanging(value);
					this.SendPropertyChanging();
					this._FineEta = value;
					this.SendPropertyChanged("FineEta");
					this.OnFineEtaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_ORARIO", Storage="_ORARIO", ThisKey="IDFasciaEta", OtherKey="IDFasciaEta")]
		public EntitySet<ORARIO> ORARIO
		{
			get
			{
				return this._ORARIO;
			}
			set
			{
				this._ORARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_TIPO_ABBONAMENTO", Storage="_TIPO_ABBONAMENTO", ThisKey="IDFasciaEta", OtherKey="IDFasciaEta")]
		public EntitySet<TIPO_ABBONAMENTO> TIPO_ABBONAMENTO
		{
			get
			{
				return this._TIPO_ABBONAMENTO;
			}
			set
			{
				this._TIPO_ABBONAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_TIPO_BIGLIETTO", Storage="_TIPO_BIGLIETTO", ThisKey="IDFasciaEta", OtherKey="IDTipoBiglietto", IsUnique=true, IsForeignKey=false)]
		public TIPO_BIGLIETTO TIPO_BIGLIETTO
		{
			get
			{
				return this._TIPO_BIGLIETTO.Entity;
			}
			set
			{
				TIPO_BIGLIETTO previousValue = this._TIPO_BIGLIETTO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_BIGLIETTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_BIGLIETTO.Entity = null;
						previousValue.FASCIA_ETA = null;
					}
					this._TIPO_BIGLIETTO.Entity = value;
					if ((value != null))
					{
						value.FASCIA_ETA = this;
					}
					this.SendPropertyChanged("TIPO_BIGLIETTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_TIPO_TESSERA", Storage="_TIPO_TESSERA", ThisKey="IDFasciaEta", OtherKey="IDTipoTessera")]
		public EntitySet<TIPO_TESSERA> TIPO_TESSERA
		{
			get
			{
				return this._TIPO_TESSERA;
			}
			set
			{
				this._TIPO_TESSERA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORARIO(ORARIO entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ETA = this;
		}
		
		private void detach_ORARIO(ORARIO entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ETA = null;
		}
		
		private void attach_TIPO_ABBONAMENTO(TIPO_ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ETA = this;
		}
		
		private void detach_TIPO_ABBONAMENTO(TIPO_ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ETA = null;
		}
		
		private void attach_TIPO_TESSERA(TIPO_TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ETA = this;
		}
		
		private void detach_TIPO_TESSERA(TIPO_TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ETA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FASCIA_ORARIA")]
	public partial class FASCIA_ORARIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFasciaOraria;
		
		private string _Nome;
		
		private System.TimeSpan _InizioOrario;
		
		private System.TimeSpan _FineOrario;
		
		private EntitySet<ORARIO> _ORARIO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFasciaOrariaChanging(int value);
    partial void OnIDFasciaOrariaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnInizioOrarioChanging(System.TimeSpan value);
    partial void OnInizioOrarioChanged();
    partial void OnFineOrarioChanging(System.TimeSpan value);
    partial void OnFineOrarioChanged();
    #endregion
		
		public FASCIA_ORARIA()
		{
			this._ORARIO = new EntitySet<ORARIO>(new Action<ORARIO>(this.attach_ORARIO), new Action<ORARIO>(this.detach_ORARIO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFasciaOraria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDFasciaOraria
		{
			get
			{
				return this._IDFasciaOraria;
			}
			set
			{
				if ((this._IDFasciaOraria != value))
				{
					this.OnIDFasciaOrariaChanging(value);
					this.SendPropertyChanging();
					this._IDFasciaOraria = value;
					this.SendPropertyChanged("IDFasciaOraria");
					this.OnIDFasciaOrariaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(2014) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InizioOrario", DbType="Time NOT NULL")]
		public System.TimeSpan InizioOrario
		{
			get
			{
				return this._InizioOrario;
			}
			set
			{
				if ((this._InizioOrario != value))
				{
					this.OnInizioOrarioChanging(value);
					this.SendPropertyChanging();
					this._InizioOrario = value;
					this.SendPropertyChanged("InizioOrario");
					this.OnInizioOrarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineOrario", DbType="Time NOT NULL")]
		public System.TimeSpan FineOrario
		{
			get
			{
				return this._FineOrario;
			}
			set
			{
				if ((this._FineOrario != value))
				{
					this.OnFineOrarioChanging(value);
					this.SendPropertyChanging();
					this._FineOrario = value;
					this.SendPropertyChanged("FineOrario");
					this.OnFineOrarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ORARIA_ORARIO", Storage="_ORARIO", ThisKey="IDFasciaOraria", OtherKey="IDFasciaOraria")]
		public EntitySet<ORARIO> ORARIO
		{
			get
			{
				return this._ORARIO;
			}
			set
			{
				this._ORARIO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORARIO(ORARIO entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ORARIA = this;
		}
		
		private void detach_ORARIO(ORARIO entity)
		{
			this.SendPropertyChanging();
			entity.FASCIA_ORARIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ISCRIZIONE")]
	public partial class ISCRIZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPersona;
		
		private int _IDEdizioneCorso;
		
		private System.DateTime _DataPagamento;
		
		private EntityRef<EDIZIONE_CORSO> _EDIZIONE_CORSO;
		
		private EntityRef<PERSONA> _PERSONA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPersonaChanging(int value);
    partial void OnIDPersonaChanged();
    partial void OnIDEdizioneCorsoChanging(int value);
    partial void OnIDEdizioneCorsoChanged();
    partial void OnDataPagamentoChanging(System.DateTime value);
    partial void OnDataPagamentoChanged();
    #endregion
		
		public ISCRIZIONE()
		{
			this._EDIZIONE_CORSO = default(EntityRef<EDIZIONE_CORSO>);
			this._PERSONA = default(EntityRef<PERSONA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPersona", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					if (this._PERSONA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEdizioneCorso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEdizioneCorso
		{
			get
			{
				return this._IDEdizioneCorso;
			}
			set
			{
				if ((this._IDEdizioneCorso != value))
				{
					if (this._EDIZIONE_CORSO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEdizioneCorsoChanging(value);
					this.SendPropertyChanging();
					this._IDEdizioneCorso = value;
					this.SendPropertyChanged("IDEdizioneCorso");
					this.OnIDEdizioneCorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPagamento", DbType="Date NOT NULL")]
		public System.DateTime DataPagamento
		{
			get
			{
				return this._DataPagamento;
			}
			set
			{
				if ((this._DataPagamento != value))
				{
					this.OnDataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._DataPagamento = value;
					this.SendPropertyChanged("DataPagamento");
					this.OnDataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDIZIONE_CORSO_ISCRIZIONE", Storage="_EDIZIONE_CORSO", ThisKey="IDEdizioneCorso", OtherKey="IDEdizioneCorso", IsForeignKey=true)]
		public EDIZIONE_CORSO EDIZIONE_CORSO
		{
			get
			{
				return this._EDIZIONE_CORSO.Entity;
			}
			set
			{
				EDIZIONE_CORSO previousValue = this._EDIZIONE_CORSO.Entity;
				if (((previousValue != value) 
							|| (this._EDIZIONE_CORSO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EDIZIONE_CORSO.Entity = null;
						previousValue.ISCRIZIONE.Remove(this);
					}
					this._EDIZIONE_CORSO.Entity = value;
					if ((value != null))
					{
						value.ISCRIZIONE.Add(this);
						this._IDEdizioneCorso = value.IDEdizioneCorso;
					}
					else
					{
						this._IDEdizioneCorso = default(int);
					}
					this.SendPropertyChanged("EDIZIONE_CORSO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ISCRIZIONE", Storage="_PERSONA", ThisKey="IDPersona", OtherKey="IDPersona", IsForeignKey=true)]
		public PERSONA PERSONA
		{
			get
			{
				return this._PERSONA.Entity;
			}
			set
			{
				PERSONA previousValue = this._PERSONA.Entity;
				if (((previousValue != value) 
							|| (this._PERSONA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSONA.Entity = null;
						previousValue.ISCRIZIONE.Remove(this);
					}
					this._PERSONA.Entity = value;
					if ((value != null))
					{
						value.ISCRIZIONE.Add(this);
						this._IDPersona = value.IDPersona;
					}
					else
					{
						this._IDPersona = default(int);
					}
					this.SendPropertyChanged("PERSONA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LEZIONE")]
	public partial class LEZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEdizioneCorso;
		
		private System.DateTime _DataOra;
		
		private System.TimeSpan _Durata;
		
		private int _IDLuogo;
		
		private EntityRef<EDIZIONE_CORSO> _EDIZIONE_CORSO;
		
		private EntityRef<LUOGO> _LUOGO;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEdizioneCorsoChanging(int value);
    partial void OnIDEdizioneCorsoChanged();
    partial void OnDataOraChanging(System.DateTime value);
    partial void OnDataOraChanged();
    partial void OnDurataChanging(System.TimeSpan value);
    partial void OnDurataChanged();
    partial void OnIDLuogoChanging(int value);
    partial void OnIDLuogoChanged();
    #endregion
		
		public LEZIONE()
		{
			this._EDIZIONE_CORSO = default(EntityRef<EDIZIONE_CORSO>);
			this._LUOGO = default(EntityRef<LUOGO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEdizioneCorso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEdizioneCorso
		{
			get
			{
				return this._IDEdizioneCorso;
			}
			set
			{
				if ((this._IDEdizioneCorso != value))
				{
					if (this._EDIZIONE_CORSO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEdizioneCorsoChanging(value);
					this.SendPropertyChanging();
					this._IDEdizioneCorso = value;
					this.SendPropertyChanged("IDEdizioneCorso");
					this.OnIDEdizioneCorsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOra", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataOra
		{
			get
			{
				return this._DataOra;
			}
			set
			{
				if ((this._DataOra != value))
				{
					this.OnDataOraChanging(value);
					this.SendPropertyChanging();
					this._DataOra = value;
					this.SendPropertyChanged("DataOra");
					this.OnDataOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Durata", DbType="Time NOT NULL")]
		public System.TimeSpan Durata
		{
			get
			{
				return this._Durata;
			}
			set
			{
				if ((this._Durata != value))
				{
					this.OnDurataChanging(value);
					this.SendPropertyChanging();
					this._Durata = value;
					this.SendPropertyChanged("Durata");
					this.OnDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLuogo", DbType="Int NOT NULL")]
		public int IDLuogo
		{
			get
			{
				return this._IDLuogo;
			}
			set
			{
				if ((this._IDLuogo != value))
				{
					if (this._LUOGO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLuogoChanging(value);
					this.SendPropertyChanging();
					this._IDLuogo = value;
					this.SendPropertyChanged("IDLuogo");
					this.OnIDLuogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDIZIONE_CORSO_LEZIONE", Storage="_EDIZIONE_CORSO", ThisKey="IDEdizioneCorso", OtherKey="IDEdizioneCorso", IsForeignKey=true)]
		public EDIZIONE_CORSO EDIZIONE_CORSO
		{
			get
			{
				return this._EDIZIONE_CORSO.Entity;
			}
			set
			{
				EDIZIONE_CORSO previousValue = this._EDIZIONE_CORSO.Entity;
				if (((previousValue != value) 
							|| (this._EDIZIONE_CORSO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EDIZIONE_CORSO.Entity = null;
						previousValue.LEZIONE.Remove(this);
					}
					this._EDIZIONE_CORSO.Entity = value;
					if ((value != null))
					{
						value.LEZIONE.Add(this);
						this._IDEdizioneCorso = value.IDEdizioneCorso;
					}
					else
					{
						this._IDEdizioneCorso = default(int);
					}
					this.SendPropertyChanged("EDIZIONE_CORSO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LUOGO_LEZIONE", Storage="_LUOGO", ThisKey="IDLuogo", OtherKey="IDLuogo", IsForeignKey=true)]
		public LUOGO LUOGO
		{
			get
			{
				return this._LUOGO.Entity;
			}
			set
			{
				LUOGO previousValue = this._LUOGO.Entity;
				if (((previousValue != value) 
							|| (this._LUOGO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LUOGO.Entity = null;
						previousValue.LEZIONE.Remove(this);
					}
					this._LUOGO.Entity = value;
					if ((value != null))
					{
						value.LEZIONE.Add(this);
						this._IDLuogo = value.IDLuogo;
					}
					else
					{
						this._IDLuogo = default(int);
					}
					this.SendPropertyChanged("LUOGO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LUOGO")]
	public partial class LUOGO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private char _Outoor;
		
		private System.Nullable<decimal> _NumeroPercorsi;
		
		private string _Via;
		
		private int _IDLuogo;
		
		private string _Zona;
		
		private string _Descrizione;
		
		private EntitySet<LEZIONE> _LEZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnOutoorChanging(char value);
    partial void OnOutoorChanged();
    partial void OnNumeroPercorsiChanging(System.Nullable<decimal> value);
    partial void OnNumeroPercorsiChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnIDLuogoChanging(int value);
    partial void OnIDLuogoChanged();
    partial void OnZonaChanging(string value);
    partial void OnZonaChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public LUOGO()
		{
			this._LEZIONE = new EntitySet<LEZIONE>(new Action<LEZIONE>(this.attach_LEZIONE), new Action<LEZIONE>(this.detach_LEZIONE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outoor", DbType="Char(1) NOT NULL")]
		public char Outoor
		{
			get
			{
				return this._Outoor;
			}
			set
			{
				if ((this._Outoor != value))
				{
					this.OnOutoorChanging(value);
					this.SendPropertyChanging();
					this._Outoor = value;
					this.SendPropertyChanged("Outoor");
					this.OnOutoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPercorsi", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> NumeroPercorsi
		{
			get
			{
				return this._NumeroPercorsi;
			}
			set
			{
				if ((this._NumeroPercorsi != value))
				{
					this.OnNumeroPercorsiChanging(value);
					this.SendPropertyChanging();
					this._NumeroPercorsi = value;
					this.SendPropertyChanged("NumeroPercorsi");
					this.OnNumeroPercorsiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(2048)")]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLuogo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLuogo
		{
			get
			{
				return this._IDLuogo;
			}
			set
			{
				if ((this._IDLuogo != value))
				{
					this.OnIDLuogoChanging(value);
					this.SendPropertyChanging();
					this._IDLuogo = value;
					this.SendPropertyChanged("IDLuogo");
					this.OnIDLuogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zona", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Zona
		{
			get
			{
				return this._Zona;
			}
			set
			{
				if ((this._Zona != value))
				{
					this.OnZonaChanging(value);
					this.SendPropertyChanging();
					this._Zona = value;
					this.SendPropertyChanged("Zona");
					this.OnZonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(2048)")]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LUOGO_LEZIONE", Storage="_LEZIONE", ThisKey="IDLuogo", OtherKey="IDLuogo")]
		public EntitySet<LEZIONE> LEZIONE
		{
			get
			{
				return this._LEZIONE;
			}
			set
			{
				this._LEZIONE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LEZIONE(LEZIONE entity)
		{
			this.SendPropertyChanging();
			entity.LUOGO = this;
		}
		
		private void detach_LEZIONE(LEZIONE entity)
		{
			this.SendPropertyChanging();
			entity.LUOGO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORARIO")]
	public partial class ORARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFasciaEta;
		
		private int _IDFasciaOraria;
		
		private EntityRef<FASCIA_ETA> _FASCIA_ETA;
		
		private EntityRef<FASCIA_ORARIA> _FASCIA_ORARIA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFasciaEtaChanging(int value);
    partial void OnIDFasciaEtaChanged();
    partial void OnIDFasciaOrariaChanging(int value);
    partial void OnIDFasciaOrariaChanged();
    #endregion
		
		public ORARIO()
		{
			this._FASCIA_ETA = default(EntityRef<FASCIA_ETA>);
			this._FASCIA_ORARIA = default(EntityRef<FASCIA_ORARIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFasciaEta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFasciaEta
		{
			get
			{
				return this._IDFasciaEta;
			}
			set
			{
				if ((this._IDFasciaEta != value))
				{
					if (this._FASCIA_ETA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFasciaEtaChanging(value);
					this.SendPropertyChanging();
					this._IDFasciaEta = value;
					this.SendPropertyChanged("IDFasciaEta");
					this.OnIDFasciaEtaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFasciaOraria", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFasciaOraria
		{
			get
			{
				return this._IDFasciaOraria;
			}
			set
			{
				if ((this._IDFasciaOraria != value))
				{
					if (this._FASCIA_ORARIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFasciaOrariaChanging(value);
					this.SendPropertyChanging();
					this._IDFasciaOraria = value;
					this.SendPropertyChanged("IDFasciaOraria");
					this.OnIDFasciaOrariaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_ORARIO", Storage="_FASCIA_ETA", ThisKey="IDFasciaEta", OtherKey="IDFasciaEta", IsForeignKey=true)]
		public FASCIA_ETA FASCIA_ETA
		{
			get
			{
				return this._FASCIA_ETA.Entity;
			}
			set
			{
				FASCIA_ETA previousValue = this._FASCIA_ETA.Entity;
				if (((previousValue != value) 
							|| (this._FASCIA_ETA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FASCIA_ETA.Entity = null;
						previousValue.ORARIO.Remove(this);
					}
					this._FASCIA_ETA.Entity = value;
					if ((value != null))
					{
						value.ORARIO.Add(this);
						this._IDFasciaEta = value.IDFasciaEta;
					}
					else
					{
						this._IDFasciaEta = default(int);
					}
					this.SendPropertyChanged("FASCIA_ETA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ORARIA_ORARIO", Storage="_FASCIA_ORARIA", ThisKey="IDFasciaOraria", OtherKey="IDFasciaOraria", IsForeignKey=true)]
		public FASCIA_ORARIA FASCIA_ORARIA
		{
			get
			{
				return this._FASCIA_ORARIA.Entity;
			}
			set
			{
				FASCIA_ORARIA previousValue = this._FASCIA_ORARIA.Entity;
				if (((previousValue != value) 
							|| (this._FASCIA_ORARIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FASCIA_ORARIA.Entity = null;
						previousValue.ORARIO.Remove(this);
					}
					this._FASCIA_ORARIA.Entity = value;
					if ((value != null))
					{
						value.ORARIO.Add(this);
						this._IDFasciaOraria = value.IDFasciaOraria;
					}
					else
					{
						this._IDFasciaOraria = default(int);
					}
					this.SendPropertyChanged("FASCIA_ORARIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSONA")]
	public partial class PERSONA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _Istruttore;
		
		private System.DateTime _DataNascita;
		
		private string _Indirizzo;
		
		private string _Nome;
		
		private string _Cognome;
		
		private System.Nullable<decimal> _Cellulare;
		
		private int _IDPersona;
		
		private EntitySet<ABBONAMENTO> _ABBONAMENTO;
		
		private EntitySet<ACCESSO> _ACCESSO;
		
		private EntitySet<ACQUISTO> _ACQUISTO;
		
		private EntitySet<EDIZIONE_CORSO> _EDIZIONE_CORSO;
		
		private EntitySet<ISCRIZIONE> _ISCRIZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIstruttoreChanging(char value);
    partial void OnIstruttoreChanged();
    partial void OnDataNascitaChanging(System.DateTime value);
    partial void OnDataNascitaChanged();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnCellulareChanging(System.Nullable<decimal> value);
    partial void OnCellulareChanged();
    partial void OnIDPersonaChanging(int value);
    partial void OnIDPersonaChanged();
    #endregion
		
		public PERSONA()
		{
			this._ABBONAMENTO = new EntitySet<ABBONAMENTO>(new Action<ABBONAMENTO>(this.attach_ABBONAMENTO), new Action<ABBONAMENTO>(this.detach_ABBONAMENTO));
			this._ACCESSO = new EntitySet<ACCESSO>(new Action<ACCESSO>(this.attach_ACCESSO), new Action<ACCESSO>(this.detach_ACCESSO));
			this._ACQUISTO = new EntitySet<ACQUISTO>(new Action<ACQUISTO>(this.attach_ACQUISTO), new Action<ACQUISTO>(this.detach_ACQUISTO));
			this._EDIZIONE_CORSO = new EntitySet<EDIZIONE_CORSO>(new Action<EDIZIONE_CORSO>(this.attach_EDIZIONE_CORSO), new Action<EDIZIONE_CORSO>(this.detach_EDIZIONE_CORSO));
			this._ISCRIZIONE = new EntitySet<ISCRIZIONE>(new Action<ISCRIZIONE>(this.attach_ISCRIZIONE), new Action<ISCRIZIONE>(this.detach_ISCRIZIONE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Istruttore", DbType="Char(1) NOT NULL")]
		public char Istruttore
		{
			get
			{
				return this._Istruttore;
			}
			set
			{
				if ((this._Istruttore != value))
				{
					this.OnIstruttoreChanging(value);
					this.SendPropertyChanging();
					this._Istruttore = value;
					this.SendPropertyChanged("Istruttore");
					this.OnIstruttoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascita", DbType="Date NOT NULL")]
		public System.DateTime DataNascita
		{
			get
			{
				return this._DataNascita;
			}
			set
			{
				if ((this._DataNascita != value))
				{
					this.OnDataNascitaChanging(value);
					this.SendPropertyChanging();
					this._DataNascita = value;
					this.SendPropertyChanged("DataNascita");
					this.OnDataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="VarChar(255)")]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cellulare", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> Cellulare
		{
			get
			{
				return this._Cellulare;
			}
			set
			{
				if ((this._Cellulare != value))
				{
					this.OnCellulareChanging(value);
					this.SendPropertyChanging();
					this._Cellulare = value;
					this.SendPropertyChanged("Cellulare");
					this.OnCellulareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPersona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPersona
		{
			get
			{
				return this._IDPersona;
			}
			set
			{
				if ((this._IDPersona != value))
				{
					this.OnIDPersonaChanging(value);
					this.SendPropertyChanging();
					this._IDPersona = value;
					this.SendPropertyChanged("IDPersona");
					this.OnIDPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ABBONAMENTO", Storage="_ABBONAMENTO", ThisKey="IDPersona", OtherKey="IDPersona")]
		public EntitySet<ABBONAMENTO> ABBONAMENTO
		{
			get
			{
				return this._ABBONAMENTO;
			}
			set
			{
				this._ABBONAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ACCESSO", Storage="_ACCESSO", ThisKey="IDPersona", OtherKey="IDPersona")]
		public EntitySet<ACCESSO> ACCESSO
		{
			get
			{
				return this._ACCESSO;
			}
			set
			{
				this._ACCESSO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ACQUISTO", Storage="_ACQUISTO", ThisKey="IDPersona", OtherKey="IDPersona")]
		public EntitySet<ACQUISTO> ACQUISTO
		{
			get
			{
				return this._ACQUISTO;
			}
			set
			{
				this._ACQUISTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_EDIZIONE_CORSO", Storage="_EDIZIONE_CORSO", ThisKey="IDPersona", OtherKey="IDPersona")]
		public EntitySet<EDIZIONE_CORSO> EDIZIONE_CORSO
		{
			get
			{
				return this._EDIZIONE_CORSO;
			}
			set
			{
				this._EDIZIONE_CORSO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSONA_ISCRIZIONE", Storage="_ISCRIZIONE", ThisKey="IDPersona", OtherKey="IDPersona")]
		public EntitySet<ISCRIZIONE> ISCRIZIONE
		{
			get
			{
				return this._ISCRIZIONE;
			}
			set
			{
				this._ISCRIZIONE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABBONAMENTO(ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ABBONAMENTO(ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_ACCESSO(ACCESSO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ACCESSO(ACCESSO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_ACQUISTO(ACQUISTO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ACQUISTO(ACQUISTO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_EDIZIONE_CORSO(EDIZIONE_CORSO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_EDIZIONE_CORSO(EDIZIONE_CORSO entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
		
		private void attach_ISCRIZIONE(ISCRIZIONE entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = this;
		}
		
		private void detach_ISCRIZIONE(ISCRIZIONE entity)
		{
			this.SendPropertyChanging();
			entity.PERSONA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TESSERA")]
	public partial class TESSERA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTessera;
		
		private int _IDAcquisto;
		
		private decimal _NumeroBiglietti;
		
		private int _IDTipoTessera;
		
		private EntitySet<USO_TESSERA> _USO_TESSERA;
		
		private EntityRef<ACQUISTO> _ACQUISTO;
		
		private EntityRef<TIPO_TESSERA> _TIPO_TESSERA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTesseraChanging(int value);
    partial void OnIDTesseraChanged();
    partial void OnIDAcquistoChanging(int value);
    partial void OnIDAcquistoChanged();
    partial void OnNumeroBigliettiChanging(decimal value);
    partial void OnNumeroBigliettiChanged();
    partial void OnIDTipoTesseraChanging(int value);
    partial void OnIDTipoTesseraChanged();
    #endregion
		
		public TESSERA()
		{
			this._USO_TESSERA = new EntitySet<USO_TESSERA>(new Action<USO_TESSERA>(this.attach_USO_TESSERA), new Action<USO_TESSERA>(this.detach_USO_TESSERA));
			this._ACQUISTO = default(EntityRef<ACQUISTO>);
			this._TIPO_TESSERA = default(EntityRef<TIPO_TESSERA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTessera", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTessera
		{
			get
			{
				return this._IDTessera;
			}
			set
			{
				if ((this._IDTessera != value))
				{
					this.OnIDTesseraChanging(value);
					this.SendPropertyChanging();
					this._IDTessera = value;
					this.SendPropertyChanged("IDTessera");
					this.OnIDTesseraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAcquisto", DbType="Int NOT NULL")]
		public int IDAcquisto
		{
			get
			{
				return this._IDAcquisto;
			}
			set
			{
				if ((this._IDAcquisto != value))
				{
					if (this._ACQUISTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAcquistoChanging(value);
					this.SendPropertyChanging();
					this._IDAcquisto = value;
					this.SendPropertyChanged("IDAcquisto");
					this.OnIDAcquistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroBiglietti", DbType="Decimal(3,0) NOT NULL")]
		public decimal NumeroBiglietti
		{
			get
			{
				return this._NumeroBiglietti;
			}
			set
			{
				if ((this._NumeroBiglietti != value))
				{
					if (this._TIPO_TESSERA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroBigliettiChanging(value);
					this.SendPropertyChanging();
					this._NumeroBiglietti = value;
					this.SendPropertyChanged("NumeroBiglietti");
					this.OnNumeroBigliettiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoTessera", DbType="Int NOT NULL")]
		public int IDTipoTessera
		{
			get
			{
				return this._IDTipoTessera;
			}
			set
			{
				if ((this._IDTipoTessera != value))
				{
					if (this._TIPO_TESSERA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTipoTesseraChanging(value);
					this.SendPropertyChanging();
					this._IDTipoTessera = value;
					this.SendPropertyChanged("IDTipoTessera");
					this.OnIDTipoTesseraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TESSERA_USO_TESSERA", Storage="_USO_TESSERA", ThisKey="IDTessera", OtherKey="IDTessera")]
		public EntitySet<USO_TESSERA> USO_TESSERA
		{
			get
			{
				return this._USO_TESSERA;
			}
			set
			{
				this._USO_TESSERA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACQUISTO_TESSERA", Storage="_ACQUISTO", ThisKey="IDAcquisto", OtherKey="IDAcquisto", IsForeignKey=true)]
		public ACQUISTO ACQUISTO
		{
			get
			{
				return this._ACQUISTO.Entity;
			}
			set
			{
				ACQUISTO previousValue = this._ACQUISTO.Entity;
				if (((previousValue != value) 
							|| (this._ACQUISTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACQUISTO.Entity = null;
						previousValue.TESSERA.Remove(this);
					}
					this._ACQUISTO.Entity = value;
					if ((value != null))
					{
						value.TESSERA.Add(this);
						this._IDAcquisto = value.IDAcquisto;
					}
					else
					{
						this._IDAcquisto = default(int);
					}
					this.SendPropertyChanged("ACQUISTO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_TESSERA_TESSERA", Storage="_TIPO_TESSERA", ThisKey="NumeroBiglietti,IDTipoTessera", OtherKey="NumeroBiglietti,IDTipoTessera", IsForeignKey=true)]
		public TIPO_TESSERA TIPO_TESSERA
		{
			get
			{
				return this._TIPO_TESSERA.Entity;
			}
			set
			{
				TIPO_TESSERA previousValue = this._TIPO_TESSERA.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_TESSERA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_TESSERA.Entity = null;
						previousValue.TESSERA.Remove(this);
					}
					this._TIPO_TESSERA.Entity = value;
					if ((value != null))
					{
						value.TESSERA.Add(this);
						this._NumeroBiglietti = value.NumeroBiglietti;
						this._IDTipoTessera = value.IDTipoTessera;
					}
					else
					{
						this._NumeroBiglietti = default(decimal);
						this._IDTipoTessera = default(int);
					}
					this.SendPropertyChanged("TIPO_TESSERA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USO_TESSERA(USO_TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.TESSERA = this;
		}
		
		private void detach_USO_TESSERA(USO_TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.TESSERA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_ABBONAMENTO")]
	public partial class TIPO_ABBONAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTipoAbbonamento;
		
		private float _Prezzo;
		
		private decimal _MesiDurata;
		
		private int _IDFasciaEta;
		
		private EntitySet<ABBONAMENTO> _ABBONAMENTO;
		
		private EntityRef<FASCIA_ETA> _FASCIA_ETA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTipoAbbonamentoChanging(int value);
    partial void OnIDTipoAbbonamentoChanged();
    partial void OnPrezzoChanging(float value);
    partial void OnPrezzoChanged();
    partial void OnMesiDurataChanging(decimal value);
    partial void OnMesiDurataChanged();
    partial void OnIDFasciaEtaChanging(int value);
    partial void OnIDFasciaEtaChanged();
    #endregion
		
		public TIPO_ABBONAMENTO()
		{
			this._ABBONAMENTO = new EntitySet<ABBONAMENTO>(new Action<ABBONAMENTO>(this.attach_ABBONAMENTO), new Action<ABBONAMENTO>(this.detach_ABBONAMENTO));
			this._FASCIA_ETA = default(EntityRef<FASCIA_ETA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoAbbonamento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTipoAbbonamento
		{
			get
			{
				return this._IDTipoAbbonamento;
			}
			set
			{
				if ((this._IDTipoAbbonamento != value))
				{
					this.OnIDTipoAbbonamentoChanging(value);
					this.SendPropertyChanging();
					this._IDTipoAbbonamento = value;
					this.SendPropertyChanged("IDTipoAbbonamento");
					this.OnIDTipoAbbonamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Real NOT NULL")]
		public float Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MesiDurata", DbType="Decimal(3,0) NOT NULL")]
		public decimal MesiDurata
		{
			get
			{
				return this._MesiDurata;
			}
			set
			{
				if ((this._MesiDurata != value))
				{
					this.OnMesiDurataChanging(value);
					this.SendPropertyChanging();
					this._MesiDurata = value;
					this.SendPropertyChanged("MesiDurata");
					this.OnMesiDurataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFasciaEta", DbType="Int NOT NULL")]
		public int IDFasciaEta
		{
			get
			{
				return this._IDFasciaEta;
			}
			set
			{
				if ((this._IDFasciaEta != value))
				{
					if (this._FASCIA_ETA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFasciaEtaChanging(value);
					this.SendPropertyChanging();
					this._IDFasciaEta = value;
					this.SendPropertyChanged("IDFasciaEta");
					this.OnIDFasciaEtaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_ABBONAMENTO_ABBONAMENTO", Storage="_ABBONAMENTO", ThisKey="IDTipoAbbonamento", OtherKey="IDTipoAbbonamento")]
		public EntitySet<ABBONAMENTO> ABBONAMENTO
		{
			get
			{
				return this._ABBONAMENTO;
			}
			set
			{
				this._ABBONAMENTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_TIPO_ABBONAMENTO", Storage="_FASCIA_ETA", ThisKey="IDFasciaEta", OtherKey="IDFasciaEta", IsForeignKey=true)]
		public FASCIA_ETA FASCIA_ETA
		{
			get
			{
				return this._FASCIA_ETA.Entity;
			}
			set
			{
				FASCIA_ETA previousValue = this._FASCIA_ETA.Entity;
				if (((previousValue != value) 
							|| (this._FASCIA_ETA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FASCIA_ETA.Entity = null;
						previousValue.TIPO_ABBONAMENTO.Remove(this);
					}
					this._FASCIA_ETA.Entity = value;
					if ((value != null))
					{
						value.TIPO_ABBONAMENTO.Add(this);
						this._IDFasciaEta = value.IDFasciaEta;
					}
					else
					{
						this._IDFasciaEta = default(int);
					}
					this.SendPropertyChanged("FASCIA_ETA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ABBONAMENTO(ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_ABBONAMENTO = this;
		}
		
		private void detach_ABBONAMENTO(ABBONAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_ABBONAMENTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_BIGLIETTO")]
	public partial class TIPO_BIGLIETTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTipoBiglietto;
		
		private float _Prezzo;
		
		private EntitySet<BIGLIETTO> _BIGLIETTO;
		
		private EntityRef<FASCIA_ETA> _FASCIA_ETA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTipoBigliettoChanging(int value);
    partial void OnIDTipoBigliettoChanged();
    partial void OnPrezzoChanging(float value);
    partial void OnPrezzoChanged();
    #endregion
		
		public TIPO_BIGLIETTO()
		{
			this._BIGLIETTO = new EntitySet<BIGLIETTO>(new Action<BIGLIETTO>(this.attach_BIGLIETTO), new Action<BIGLIETTO>(this.detach_BIGLIETTO));
			this._FASCIA_ETA = default(EntityRef<FASCIA_ETA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoBiglietto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTipoBiglietto
		{
			get
			{
				return this._IDTipoBiglietto;
			}
			set
			{
				if ((this._IDTipoBiglietto != value))
				{
					if (this._FASCIA_ETA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTipoBigliettoChanging(value);
					this.SendPropertyChanging();
					this._IDTipoBiglietto = value;
					this.SendPropertyChanged("IDTipoBiglietto");
					this.OnIDTipoBigliettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Real NOT NULL")]
		public float Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_BIGLIETTO_BIGLIETTO", Storage="_BIGLIETTO", ThisKey="IDTipoBiglietto", OtherKey="IDTipoBiglietto")]
		public EntitySet<BIGLIETTO> BIGLIETTO
		{
			get
			{
				return this._BIGLIETTO;
			}
			set
			{
				this._BIGLIETTO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_TIPO_BIGLIETTO", Storage="_FASCIA_ETA", ThisKey="IDTipoBiglietto", OtherKey="IDFasciaEta", IsForeignKey=true)]
		public FASCIA_ETA FASCIA_ETA
		{
			get
			{
				return this._FASCIA_ETA.Entity;
			}
			set
			{
				FASCIA_ETA previousValue = this._FASCIA_ETA.Entity;
				if (((previousValue != value) 
							|| (this._FASCIA_ETA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FASCIA_ETA.Entity = null;
						previousValue.TIPO_BIGLIETTO = null;
					}
					this._FASCIA_ETA.Entity = value;
					if ((value != null))
					{
						value.TIPO_BIGLIETTO = this;
						this._IDTipoBiglietto = value.IDFasciaEta;
					}
					else
					{
						this._IDTipoBiglietto = default(int);
					}
					this.SendPropertyChanged("FASCIA_ETA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BIGLIETTO(BIGLIETTO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_BIGLIETTO = this;
		}
		
		private void detach_BIGLIETTO(BIGLIETTO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_BIGLIETTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_TESSERA")]
	public partial class TIPO_TESSERA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTipoTessera;
		
		private float _Prezzo;
		
		private decimal _NumeroBiglietti;
		
		private EntitySet<TESSERA> _TESSERA;
		
		private EntityRef<FASCIA_ETA> _FASCIA_ETA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTipoTesseraChanging(int value);
    partial void OnIDTipoTesseraChanged();
    partial void OnPrezzoChanging(float value);
    partial void OnPrezzoChanged();
    partial void OnNumeroBigliettiChanging(decimal value);
    partial void OnNumeroBigliettiChanged();
    #endregion
		
		public TIPO_TESSERA()
		{
			this._TESSERA = new EntitySet<TESSERA>(new Action<TESSERA>(this.attach_TESSERA), new Action<TESSERA>(this.detach_TESSERA));
			this._FASCIA_ETA = default(EntityRef<FASCIA_ETA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTipoTessera", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTipoTessera
		{
			get
			{
				return this._IDTipoTessera;
			}
			set
			{
				if ((this._IDTipoTessera != value))
				{
					if (this._FASCIA_ETA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTipoTesseraChanging(value);
					this.SendPropertyChanging();
					this._IDTipoTessera = value;
					this.SendPropertyChanged("IDTipoTessera");
					this.OnIDTipoTesseraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Real NOT NULL")]
		public float Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroBiglietti", DbType="Decimal(3,0) NOT NULL", IsPrimaryKey=true)]
		public decimal NumeroBiglietti
		{
			get
			{
				return this._NumeroBiglietti;
			}
			set
			{
				if ((this._NumeroBiglietti != value))
				{
					this.OnNumeroBigliettiChanging(value);
					this.SendPropertyChanging();
					this._NumeroBiglietti = value;
					this.SendPropertyChanged("NumeroBiglietti");
					this.OnNumeroBigliettiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_TESSERA_TESSERA", Storage="_TESSERA", ThisKey="NumeroBiglietti,IDTipoTessera", OtherKey="NumeroBiglietti,IDTipoTessera")]
		public EntitySet<TESSERA> TESSERA
		{
			get
			{
				return this._TESSERA;
			}
			set
			{
				this._TESSERA.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FASCIA_ETA_TIPO_TESSERA", Storage="_FASCIA_ETA", ThisKey="IDTipoTessera", OtherKey="IDFasciaEta", IsForeignKey=true)]
		public FASCIA_ETA FASCIA_ETA
		{
			get
			{
				return this._FASCIA_ETA.Entity;
			}
			set
			{
				FASCIA_ETA previousValue = this._FASCIA_ETA.Entity;
				if (((previousValue != value) 
							|| (this._FASCIA_ETA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FASCIA_ETA.Entity = null;
						previousValue.TIPO_TESSERA.Remove(this);
					}
					this._FASCIA_ETA.Entity = value;
					if ((value != null))
					{
						value.TIPO_TESSERA.Add(this);
						this._IDTipoTessera = value.IDFasciaEta;
					}
					else
					{
						this._IDTipoTessera = default(int);
					}
					this.SendPropertyChanged("FASCIA_ETA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TESSERA(TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_TESSERA = this;
		}
		
		private void detach_TESSERA(TESSERA entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_TESSERA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USO_TESSERA")]
	public partial class USO_TESSERA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTessera;
		
		private System.DateTime _DataUso;
		
		private EntityRef<TESSERA> _TESSERA;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTesseraChanging(int value);
    partial void OnIDTesseraChanged();
    partial void OnDataUsoChanging(System.DateTime value);
    partial void OnDataUsoChanged();
    #endregion
		
		public USO_TESSERA()
		{
			this._TESSERA = default(EntityRef<TESSERA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTessera", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTessera
		{
			get
			{
				return this._IDTessera;
			}
			set
			{
				if ((this._IDTessera != value))
				{
					if (this._TESSERA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTesseraChanging(value);
					this.SendPropertyChanging();
					this._IDTessera = value;
					this.SendPropertyChanged("IDTessera");
					this.OnIDTesseraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataUso", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataUso
		{
			get
			{
				return this._DataUso;
			}
			set
			{
				if ((this._DataUso != value))
				{
					this.OnDataUsoChanging(value);
					this.SendPropertyChanging();
					this._DataUso = value;
					this.SendPropertyChanged("DataUso");
					this.OnDataUsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TESSERA_USO_TESSERA", Storage="_TESSERA", ThisKey="IDTessera", OtherKey="IDTessera", IsForeignKey=true)]
		public TESSERA TESSERA
		{
			get
			{
				return this._TESSERA.Entity;
			}
			set
			{
				TESSERA previousValue = this._TESSERA.Entity;
				if (((previousValue != value) 
							|| (this._TESSERA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TESSERA.Entity = null;
						previousValue.USO_TESSERA.Remove(this);
					}
					this._TESSERA.Entity = value;
					if ((value != null))
					{
						value.USO_TESSERA.Add(this);
						this._IDTessera = value.IDTessera;
					}
					else
					{
						this._IDTessera = default(int);
					}
					this.SendPropertyChanged("TESSERA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
